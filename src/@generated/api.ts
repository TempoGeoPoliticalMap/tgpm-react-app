/* tslint:disable */
/* eslint-disable */
/**
 * TempoGeoPoliticalMap RESTful API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface BasicErrorObjectDef
 */
export interface BasicErrorObjectDef {
    /**
     * An application-specific error code, expressed as a string value.
     * @type {number}
     * @memberof BasicErrorObjectDef
     */
    'code'?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof BasicErrorObjectDef
     */
    'detail'?: string;
    /**
     * 
     * @type {string}
     * @memberof BasicErrorObjectDef
     */
    'id'?: string;
    /**
     * An object containing references to the source of the error.
     * @type {string}
     * @memberof BasicErrorObjectDef
     */
    'source'?: string;
}
/**
 * List of Country Codes to filter Events.
 * @export
 * @interface CountryCodeListDef
 */
export interface CountryCodeListDef extends Array<string> {
}
/**
 * Information about a Country related to the Event.
 * @export
 * @interface CountryDef
 */
export interface CountryDef {
    /**
     * 
     * @type {string}
     * @memberof CountryDef
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof CountryDef
     */
    'wikidataId'?: string;
}
/**
 * List of Countries related to the Event.
 * @export
 * @interface CountryListDef
 */
export interface CountryListDef extends Array<CountryDef> {
}
/**
 * 
 * @export
 * @interface Error400AllOfDef
 */
export interface Error400AllOfDef {
    /**
     * 
     * @type {any}
     * @memberof Error400AllOfDef
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error400AllOfDef
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error400Def
 */
export interface Error400Def {
    /**
     * An application-specific error code, expressed as a string value.
     * @type {number}
     * @memberof Error400Def
     */
    'code'?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof Error400Def
     */
    'detail'?: string;
    /**
     * 
     * @type {string}
     * @memberof Error400Def
     */
    'id'?: string;
    /**
     * An object containing references to the source of the error.
     * @type {string}
     * @memberof Error400Def
     */
    'source'?: string;
    /**
     * 
     * @type {any}
     * @memberof Error400Def
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error400Def
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error401AllOfDef
 */
export interface Error401AllOfDef {
    /**
     * 
     * @type {any}
     * @memberof Error401AllOfDef
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error401AllOfDef
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error401Def
 */
export interface Error401Def {
    /**
     * An application-specific error code, expressed as a string value.
     * @type {number}
     * @memberof Error401Def
     */
    'code'?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof Error401Def
     */
    'detail'?: string;
    /**
     * 
     * @type {string}
     * @memberof Error401Def
     */
    'id'?: string;
    /**
     * An object containing references to the source of the error.
     * @type {string}
     * @memberof Error401Def
     */
    'source'?: string;
    /**
     * 
     * @type {any}
     * @memberof Error401Def
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error401Def
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error403AllOfDef
 */
export interface Error403AllOfDef {
    /**
     * 
     * @type {any}
     * @memberof Error403AllOfDef
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error403AllOfDef
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error403Def
 */
export interface Error403Def {
    /**
     * An application-specific error code, expressed as a string value.
     * @type {number}
     * @memberof Error403Def
     */
    'code'?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof Error403Def
     */
    'detail'?: string;
    /**
     * 
     * @type {string}
     * @memberof Error403Def
     */
    'id'?: string;
    /**
     * An object containing references to the source of the error.
     * @type {string}
     * @memberof Error403Def
     */
    'source'?: string;
    /**
     * 
     * @type {any}
     * @memberof Error403Def
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error403Def
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error404AllOfDef
 */
export interface Error404AllOfDef {
    /**
     * 
     * @type {any}
     * @memberof Error404AllOfDef
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error404AllOfDef
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error404Def
 */
export interface Error404Def {
    /**
     * An application-specific error code, expressed as a string value.
     * @type {number}
     * @memberof Error404Def
     */
    'code'?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof Error404Def
     */
    'detail'?: string;
    /**
     * 
     * @type {string}
     * @memberof Error404Def
     */
    'id'?: string;
    /**
     * An object containing references to the source of the error.
     * @type {string}
     * @memberof Error404Def
     */
    'source'?: string;
    /**
     * 
     * @type {any}
     * @memberof Error404Def
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error404Def
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error406AllOfDef
 */
export interface Error406AllOfDef {
    /**
     * 
     * @type {any}
     * @memberof Error406AllOfDef
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error406AllOfDef
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error406Def
 */
export interface Error406Def {
    /**
     * An application-specific error code, expressed as a string value.
     * @type {number}
     * @memberof Error406Def
     */
    'code'?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof Error406Def
     */
    'detail'?: string;
    /**
     * 
     * @type {string}
     * @memberof Error406Def
     */
    'id'?: string;
    /**
     * An object containing references to the source of the error.
     * @type {string}
     * @memberof Error406Def
     */
    'source'?: string;
    /**
     * 
     * @type {any}
     * @memberof Error406Def
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error406Def
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error409AllOfDef
 */
export interface Error409AllOfDef {
    /**
     * 
     * @type {any}
     * @memberof Error409AllOfDef
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error409AllOfDef
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error409Def
 */
export interface Error409Def {
    /**
     * An application-specific error code, expressed as a string value.
     * @type {number}
     * @memberof Error409Def
     */
    'code'?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof Error409Def
     */
    'detail'?: string;
    /**
     * 
     * @type {string}
     * @memberof Error409Def
     */
    'id'?: string;
    /**
     * An object containing references to the source of the error.
     * @type {string}
     * @memberof Error409Def
     */
    'source'?: string;
    /**
     * 
     * @type {any}
     * @memberof Error409Def
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error409Def
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error422AllOfDef
 */
export interface Error422AllOfDef {
    /**
     * 
     * @type {any}
     * @memberof Error422AllOfDef
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error422AllOfDef
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error422Def
 */
export interface Error422Def {
    /**
     * An application-specific error code, expressed as a string value.
     * @type {number}
     * @memberof Error422Def
     */
    'code'?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof Error422Def
     */
    'detail'?: string;
    /**
     * 
     * @type {string}
     * @memberof Error422Def
     */
    'id'?: string;
    /**
     * An object containing references to the source of the error.
     * @type {string}
     * @memberof Error422Def
     */
    'source'?: string;
    /**
     * 
     * @type {any}
     * @memberof Error422Def
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error422Def
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error429AllOfDef
 */
export interface Error429AllOfDef {
    /**
     * 
     * @type {any}
     * @memberof Error429AllOfDef
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error429AllOfDef
     */
    'title'?: any;
}
/**
 * 
 * @export
 * @interface Error429Def
 */
export interface Error429Def {
    /**
     * An application-specific error code, expressed as a string value.
     * @type {number}
     * @memberof Error429Def
     */
    'code'?: number;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof Error429Def
     */
    'detail'?: string;
    /**
     * 
     * @type {string}
     * @memberof Error429Def
     */
    'id'?: string;
    /**
     * An object containing references to the source of the error.
     * @type {string}
     * @memberof Error429Def
     */
    'source'?: string;
    /**
     * 
     * @type {any}
     * @memberof Error429Def
     */
    'status'?: any;
    /**
     * 
     * @type {any}
     * @memberof Error429Def
     */
    'title'?: any;
}
/**
 * Historical political Event.
 * @export
 * @interface EventDef
 */
export interface EventDef {
    /**
     * 
     * @type {CountryListDef}
     * @memberof EventDef
     */
    'countries': CountryListDef;
    /**
     * 
     * @type {string}
     * @memberof EventDef
     */
    'endTime'?: string;
    /**
     * 
     * @type {LocationListDef}
     * @memberof EventDef
     */
    'locations'?: LocationListDef;
    /**
     * Name of a historical political Event.
     * @type {string}
     * @memberof EventDef
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof EventDef
     */
    'startTime': string;
    /**
     * 
     * @type {string}
     * @memberof EventDef
     */
    'timeStateRelativeToNow': string;
    /**
     * 
     * @type {EventTypeDef}
     * @memberof EventDef
     */
    'type': EventTypeDef;
    /**
     * Record ID of a data item in https://www.wikidata.org.
     * @type {string}
     * @memberof EventDef
     */
    'wikidataId': string;
}
/**
 * 
 * @export
 * @interface EventListResponseBodyDef
 */
export interface EventListResponseBodyDef {
    /**
     * 
     * @type {Array<EventDef>}
     * @memberof EventListResponseBodyDef
     */
    'data'?: Array<EventDef>;
}
/**
 * 
 * @export
 * @interface EventResponseBodyDef
 */
export interface EventResponseBodyDef {
    /**
     * 
     * @type {EventDef}
     * @memberof EventResponseBodyDef
     */
    'data'?: EventDef;
}
/**
 * Type of an Event.
 * @export
 * @enum {string}
 */

export const EventTypeDef = {
    WARFARE_AND_ARMED_CONFLICTS: 'WARFARE_AND_ARMED_CONFLICTS'
} as const;

export type EventTypeDef = typeof EventTypeDef[keyof typeof EventTypeDef];


/**
 * List of Event Types to filter Events.
 * @export
 * @interface EventTypeListDef
 */
export interface EventTypeListDef extends Array<EventTypeDef> {
}
/**
 * Information about a Location related to the Event.
 * @export
 * @interface LocationDef
 */
export interface LocationDef {
    /**
     * 
     * @type {string}
     * @memberof LocationDef
     */
    'coodrinate'?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationDef
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationDef
     */
    'wikidataId'?: string;
}
/**
 * List of Locations related to the Event.
 * @export
 * @interface LocationListDef
 */
export interface LocationListDef extends Array<LocationDef> {
}
/**
 * World Region.
 * @export
 * @enum {string}
 */

export const RegionDef = {
    EAST_ASIA_AND_PACIFIC: 'east_asia_and_pacific',
    EUROPE_AND_CENTRAL_ASIA: 'europe_and_central_asia',
    LATIN_AMERICA_AND_CARIBBEAN: 'latin_america_and_caribbean',
    MIDDLE_EAST_AND_NORTH_AFRICA: 'middle_east_and_north_africa',
    NORTH_AMERICA: 'north_america',
    SOUTH_ASIA: 'south_asia',
    SUB_SAHARAN_AFRICA: 'sub_saharan_africa'
} as const;

export type RegionDef = typeof RegionDef[keyof typeof RegionDef];


/**
 * List of World Regions to filter Events.
 * @export
 * @interface RegionListDef
 */
export interface RegionListDef extends Array<RegionDef> {
}

/**
 * EventsApi - axios parameter creator
 * @export
 */
export const EventsApiAxiosParamCreator = function (configuration?: Configuration) {

    return {
        /**
         *
         * @summary List of Historical Political Events.
         * @param {string} [accept] Default accept header
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        // @ts-ignore
        v1EventsGet: async (accept?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1/events`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (accept != null) {
                localVarHeaderParameter['Accept'] = String(accept);
            }



            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * EventsApi - functional programming interface
 * @export
 */
export const EventsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = EventsApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @summary List of Historical Political Events.
         * @param {string} [accept] Default accept header
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        // @ts-ignore
        async v1EventsGet(accept?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EventListResponseBodyDef>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.v1EventsGet(accept, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * EventsApi - factory interface
 * @export
 */
export const EventsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = EventsApiFp(configuration)
    return {
        /**
         * 
         * @summary List of Historical Political Events.
         * @param {EventsApiV1EventsGetRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1EventsGet(requestParameters: EventsApiV1EventsGetRequest = {}, options?: AxiosRequestConfig): AxiosPromise<EventListResponseBodyDef> {
            return localVarFp.v1EventsGet(requestParameters.accept, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for v1EventsGet operation in EventsApi.
 * @export
 * @interface EventsApiV1EventsGetRequest
 */
export interface EventsApiV1EventsGetRequest {
    /**
     * Default accept header
     * @type {string}
     * @memberof EventsApiV1EventsGet
     */
    readonly accept?: string
}

/**
 * EventsApi - object-oriented interface
 * @export
 * @class EventsApi
 * @extends {BaseAPI}
 */
export class EventsApi extends BaseAPI {
    /**
     * 
     * @summary List of Historical Political Events.
     * @param {EventsApiV1EventsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventsApi
     */
    public v1EventsGet(requestParameters: EventsApiV1EventsGetRequest = {}, options?: AxiosRequestConfig) {
        return EventsApiFp(this.configuration).v1EventsGet(requestParameters.accept, options).then((request) => request(this.axios, this.basePath));
    }
}


